apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-auth
  namespace: vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault-auth
    namespace: vault
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-auth-secret
  namespace: vault
  annotations:
    kubernetes.io/service-account.name: vault-auth
type: kubernetes.io/service-account-token
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-k8s-auth-setup
  namespace: vault
spec:
  template:
    spec:
      serviceAccountName: vault-auth
      restartPolicy: OnFailure
      containers:
      - name: vault-k8s-auth
        image: hashicorp/vault:1.15.2
        env:
        - name: VAULT_ADDR
          value: "https://vault.vault.svc.cluster.local:8200"
        - name: VAULT_CACERT
          value: "/vault/userconfig/vault-tls/ca.crt"
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: vault-init-secret
              key: root-token
        - name: K8S_SA_TOKEN
          valueFrom:
            secretKeyRef:
              name: vault-auth-secret
              key: token
        volumeMounts:
        - name: vault-tls
          mountPath: /vault/userconfig/vault-tls
          readOnly: true
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          until vault status > /dev/null 2>&1; do
            echo "Waiting for Vault to be ready..."
            sleep 5
          done
          
          # Enable Kubernetes auth method
          vault auth enable kubernetes || true
          
          # Configure Kubernetes auth
          vault write auth/kubernetes/config \
            token_reviewer_jwt="$K8S_SA_TOKEN" \
            kubernetes_host="https://kubernetes.default.svc.cluster.local" \
            kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          
          echo "Kubernetes auth method configured successfully"
      volumes:
      - name: vault-tls
        secret:
          secretName: vault-tls
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-init-script
  namespace: vault
data:
  init.sh: |
    #!/bin/sh
    set -e
    
    export VAULT_ADDR="https://vault.vault.svc.cluster.local:8200"
    export VAULT_CACERT="/vault/userconfig/vault-tls/ca.crt"
    
    # Wait for Vault to be ready
    until vault status > /dev/null 2>&1; do
      echo "Waiting for Vault to be ready..."
      sleep 5
    done
    
    # Check if Vault is already initialized
    if vault status | grep -q "Initialized.*true"; then
      echo "Vault is already initialized"
      exit 0
    fi
    
    # Initialize Vault
    echo "Initializing Vault..."
    vault operator init \
      -key-shares=5 \
      -key-threshold=3 \
      -format=json > /tmp/vault-init.json
    
    # Extract keys and root token
    UNSEAL_KEY_1=$(cat /tmp/vault-init.json | jq -r '.unseal_keys_b64[0]')
    UNSEAL_KEY_2=$(cat /tmp/vault-init.json | jq -r '.unseal_keys_b64[1]')
    UNSEAL_KEY_3=$(cat /tmp/vault-init.json | jq -r '.unseal_keys_b64[2]')
    ROOT_TOKEN=$(cat /tmp/vault-init.json | jq -r '.root_token')
    
    # Create secret with init data
    kubectl create secret generic vault-init-secret \
      --from-literal=unseal-key-1="$UNSEAL_KEY_1" \
      --from-literal=unseal-key-2="$UNSEAL_KEY_2" \
      --from-literal=unseal-key-3="$UNSEAL_KEY_3" \
      --from-literal=root-token="$ROOT_TOKEN" \
      -n vault || true
    
    # Unseal Vault
    vault operator unseal "$UNSEAL_KEY_1"
    vault operator unseal "$UNSEAL_KEY_2"
    vault operator unseal "$UNSEAL_KEY_3"
    
    echo "Vault initialized and unsealed successfully"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init-job
  namespace: vault
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: vault-init
        image: hashicorp/vault:1.15.2
        command: ["/bin/sh", "/scripts/init.sh"]
        volumeMounts:
        - name: vault-tls
          mountPath: /vault/userconfig/vault-tls
          readOnly: true
        - name: init-script
          mountPath: /scripts
          readOnly: true
        env:
        - name: VAULT_ADDR
          value: "https://vault.vault.svc.cluster.local:8200"
        - name: VAULT_CACERT
          value: "/vault/userconfig/vault-tls/ca.crt"
      volumes:
      - name: vault-tls
        secret:
          secretName: vault-tls
      - name: init-script
        configMap:
          name: vault-init-script
          defaultMode: 0755