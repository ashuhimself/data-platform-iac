apiVersion: batch/v1
kind: Job
metadata:
  name: vault-secrets-init
  namespace: vault
spec:
  template:
    spec:
      serviceAccountName: vault-auth
      restartPolicy: OnFailure
      containers:
      - name: vault-secrets-init
        image: hashicorp/vault:1.15.2
        env:
        - name: VAULT_ADDR
          value: "https://vault.vault.svc.cluster.local:8200"
        - name: VAULT_CACERT
          value: "/vault/userconfig/vault-tls/ca.crt"
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: vault-init-secret
              key: root-token
        volumeMounts:
        - name: vault-tls
          mountPath: /vault/userconfig/vault-tls
          readOnly: true
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          until vault status > /dev/null 2>&1; do
            echo "Waiting for Vault to be ready..."
            sleep 5
          done
          
          # Generate random passwords
          POSTGRES_PASSWORD=$(openssl rand -base64 32)
          REDIS_PASSWORD=$(openssl rand -base64 32)
          CLICKHOUSE_PASSWORD=$(openssl rand -base64 32)
          TRINO_PASSWORD=$(openssl rand -base64 32)
          AIRFLOW_SECRET_KEY=$(openssl rand -base64 32)
          AIRFLOW_FERNET_KEY=$(openssl rand -base64 32)
          AIRFLOW_WEBSERVER_SECRET=$(openssl rand -base64 32)
          SUPERSET_SECRET_KEY=$(openssl rand -base64 32)
          RANGER_ADMIN_PASSWORD=$(openssl rand -base64 32)
          AIRBYTE_DB_PASSWORD=$(openssl rand -base64 32)
          MINIO_ACCESS_KEY="airbyte"
          MINIO_SECRET_KEY=$(openssl rand -base64 32)
          
          echo "Creating database secrets..."
          
          # Database credentials
          vault kv put secret/database/postgresql \
            username="postgres" \
            password="$POSTGRES_PASSWORD" \
            host="postgresql.database.svc.cluster.local" \
            port="5432" \
            database="postgres"
          
          vault kv put secret/database/redis \
            password="$REDIS_PASSWORD" \
            host="redis.database.svc.cluster.local" \
            port="6379"
          
          vault kv put secret/database/clickhouse \
            username="clickhouse" \
            password="$CLICKHOUSE_PASSWORD" \
            host="clickhouse.clickhouse.svc.cluster.local" \
            port="9000" \
            database="default"
          
          vault kv put secret/database/trino \
            username="trino" \
            password="$TRINO_PASSWORD" \
            host="trino.trino.svc.cluster.local" \
            port="8080"
          
          vault kv put secret/database/minio \
            access_key="$MINIO_ACCESS_KEY" \
            secret_key="$MINIO_SECRET_KEY" \
            endpoint="http://airbyte-minio.airbyte.svc.cluster.local:9000" \
            bucket="airbyte-dev-logs"
          
          echo "Creating application secrets..."
          
          # Airflow secrets
          vault kv put secret/airflow/config \
            secret_key="$AIRFLOW_SECRET_KEY" \
            fernet_key="$AIRFLOW_FERNET_KEY" \
            webserver_secret="$AIRFLOW_WEBSERVER_SECRET" \
            admin_username="admin" \
            admin_password="admin123" \
            admin_email="admin@dataplatform.local"
          
          # Superset secrets
          vault kv put secret/superset/config \
            secret_key="$SUPERSET_SECRET_KEY" \
            admin_username="admin" \
            admin_password="admin123" \
            admin_email="admin@dataplatform.local"
          
          # Trino secrets
          vault kv put secret/trino/config \
            coordinator_password="$TRINO_PASSWORD" \
            worker_password="$TRINO_PASSWORD"
          
          # ClickHouse secrets
          vault kv put secret/clickhouse/config \
            admin_password="$CLICKHOUSE_PASSWORD"
          
          # Ranger secrets
          vault kv put secret/ranger/config \
            admin_password="$RANGER_ADMIN_PASSWORD" \
            admin_username="admin"
          
          # Airbyte secrets
          vault kv put secret/airbyte/config \
            database_password="$AIRBYTE_DB_PASSWORD" \
            database_username="airbyte" \
            database_host="airbyte-postgresql.airbyte.svc.cluster.local" \
            database_port="5432" \
            database_name="airbyte" \
            minio_access_key="$MINIO_ACCESS_KEY" \
            minio_secret_key="$MINIO_SECRET_KEY" \
            minio_endpoint="http://airbyte-minio.airbyte.svc.cluster.local:9000" \
            admin_username="admin" \
            admin_password="admin123" \
            admin_email="admin@dataplatform.local"
          
          echo "Creating certificate secrets placeholders..."
          
          # Certificate placeholders (these would be populated with actual certificates)
          vault kv put secret/certificates/tls \
            ca_cert="# CA Certificate - Replace with actual certificate" \
            tls_cert="# TLS Certificate - Replace with actual certificate" \
            tls_key="# TLS Private Key - Replace with actual private key"
          
          vault kv put secret/certificates/airflow-tls \
            tls_cert="# Airflow TLS Certificate" \
            tls_key="# Airflow TLS Private Key"
          
          vault kv put secret/certificates/airbyte-tls \
            tls_cert="# Airbyte TLS Certificate" \
            tls_key="# Airbyte TLS Private Key"
          
          vault kv put secret/certificates/superset-tls \
            tls_cert="# Superset TLS Certificate" \
            tls_key="# Superset TLS Private Key"
          
          vault kv put secret/certificates/trino-tls \
            tls_cert="# Trino TLS Certificate" \
            tls_key="# Trino TLS Private Key"
          
          vault kv put secret/certificates/ranger-tls \
            tls_cert="# Ranger TLS Certificate" \
            tls_key="# Ranger TLS Private Key"
          
          vault kv put secret/certificates/vault-tls \
            tls_cert="# Vault TLS Certificate" \
            tls_key="# Vault TLS Private Key"
          
          echo "Creating API keys and external service credentials..."
          
          # External service API keys (placeholders)
          vault kv put secret/api-keys/aws \
            access_key_id="# AWS Access Key ID" \
            secret_access_key="# AWS Secret Access Key" \
            region="us-east-1"
          
          vault kv put secret/api-keys/gcp \
            service_account_key="# GCP Service Account JSON Key"
          
          vault kv put secret/api-keys/azure \
            client_id="# Azure Client ID" \
            client_secret="# Azure Client Secret" \
            tenant_id="# Azure Tenant ID"
          
          # LDAP/Active Directory (if needed)
          vault kv put secret/dataplatform/ldap \
            bind_dn="# LDAP Bind DN" \
            bind_password="# LDAP Bind Password" \
            base_dn="# LDAP Base DN" \
            server_url="# LDAP Server URL"
          
          # SMTP configuration
          vault kv put secret/dataplatform/smtp \
            host="# SMTP Host" \
            port="587" \
            username="# SMTP Username" \
            password="# SMTP Password" \
            use_tls="true"
          
          # Monitoring and alerting
          vault kv put secret/monitoring/config \
            slack_webhook_url="# Slack Webhook URL for alerts" \
            pagerduty_integration_key="# PagerDuty Integration Key" \
            email_alerts_to="admin@dataplatform.local"
          
          echo "All secrets initialized successfully!"
          echo "IMPORTANT: Remember to update placeholder values with actual credentials"
      volumes:
      - name: vault-tls
        secret:
          secretName: vault-tls